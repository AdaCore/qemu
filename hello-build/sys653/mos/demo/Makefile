#
# Wrapper makefile generated by the project manager
# This makefile creates the project makefile if necessary
#


# get definitions of path delimiter and PWD
ifeq ($(TGT_DIR),)
TGT_DIR = $(WIND_BASE)/target
endif

include $(TGT_DIR)/h/make/defs.$(WIND_HOST_TYPE)

# define WIND_PROJ_BASE if it is not defined in the environment

ifeq ($(WIND_PROJ_BASE),)
ifneq ($(WIND_HOST_TYPE),x86-win32)
WIND_PROJ_BASE	= $(shell cd $(TGT_DIR)/proj; $(PWD))
else
WIND_PROJ_BASE	= $(TGT_DIR)/proj
endif
endif

HUTILS_DIR	= $(subst /,$(DIRCHAR),$(WIND_BASE)/host/src/hutils)

PRJ_DIR         = $(subst \,/,$(shell $(PWD)))
PRJ_TYPE        = domain
PRJ_FILE        = domain.wpj
ifeq ($(BUILD_TYPE),)
BUILD_SPEC      = $(subst \,/,$(shell $(PRJ_EXE) prjBuildFromDirGet $(PRJ_DIR)))
endif
ifeq ($(BUILD_TYPE),RAM_PAYLOAD)
BUILD_SPEC      = $(subst \,/,$(shell $(PRJ_EXE) prjBuildFromDirGet  $(PRJ_DIR)))_ramPayload
endif
ifeq ($(BUILD_TYPE),ROM_PAYLOAD)
BUILD_SPEC      = $(subst \,/,$(shell $(PRJ_EXE) prjBuildFromDirGet  $(PRJ_DIR)))_romPayload
endif
PD_BUILD        = tclsh $(WIND_BASE)/host/resource/tcl/app-config/Project/pdBuild.tcl
.PHONY:         default
default:        defaultTarget

# export variable definitions to sub-make
export




Makefile.$(PRJ_TYPE):
	$(PD_BUILD) $(PRJ_FILE) level2MakeGen Makefile.$(PRJ_TYPE) $(PRJ_TYPE)

# delegate all targets to Makefile.$(PRJ_TYPE), which is created if necessary

%::
#
# create Makefile.$(PRJ_TYPE) if necessary
#
	make Makefile.$(PRJ_TYPE)
#
# create buildspec directory if necessary
#
ifeq ($(wildcard $(BUILD_SPEC)),)
	mkdir $(BUILD_SPEC)
endif
	$(MAKE) -C $(PRJ_DIR)/$(BUILD_SPEC) -f $(PRJ_DIR)/Makefile.$(PRJ_TYPE) $@


force : ;

Makefile : ;

makefile : ;

$(TGT_DIR)/h/make/defs.$(WIND_HOST_TYPE) : ;

