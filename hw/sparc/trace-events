# See docs/devel/tracing.txt for syntax documentation.

# sun4m.c
sun4m_cpu_interrupt(unsigned int level) "Set CPU IRQ %d"
sun4m_cpu_reset_interrupt(unsigned int level) "Reset CPU IRQ %d"
sun4m_cpu_set_irq_raise(int level) "Raise CPU IRQ %d"
sun4m_cpu_set_irq_lower(int level) "Lower CPU IRQ %d"

# sun4m_iommu.c
sun4m_iommu_mem_readl(uint64_t addr, uint32_t ret) "read reg[0x%"PRIx64"] = 0x%x"
sun4m_iommu_mem_writel(uint64_t addr, uint32_t val) "write reg[0x%"PRIx64"] = 0x%x"
sun4m_iommu_mem_writel_ctrl(uint64_t iostart) "iostart = 0x%"PRIx64
sun4m_iommu_mem_writel_tlbflush(uint32_t val) "tlb flush 0x%x"
sun4m_iommu_mem_writel_pgflush(uint32_t val) "page flush 0x%x"
sun4m_iommu_page_get_flags(uint64_t pa, uint64_t iopte, uint32_t ret) "get flags addr 0x%"PRIx64" => pte 0x%"PRIx64", *pte = 0x%x"
sun4m_iommu_translate_pa(uint64_t addr, uint64_t pa, uint32_t iopte) "xlate dva 0x%"PRIx64" => pa 0x%"PRIx64" iopte = 0x%x"
sun4m_iommu_bad_addr(uint64_t addr) "bad addr 0x%"PRIx64

# leon3.c
leon3_set_irq(int intno) "Set CPU IRQ %d"
leon3_reset_irq(int intno) "Reset CPU IRQ %d"

# hw/leon.c
leon_check_irqs(uint32_t pend, uint32_t force, uint32_t mask, uint32_t lvl1, uint32_t lvl2) "pend:0x%04x force:0x%04x mask:0x%04x lvl1:0x%04x lvl0:0x%04x\n"
leon_set_irq(int intno) "Set CPU IRQ %d"
leon_reset_irq(int intno) "Reset CPU IRQ %d"
leon_intctl_ack(int intno) "interrupt:%d"
leon_uart_event(int event) "uart event:%d"
leon_timer_disabled(int id, uint32_t config) "timer:%d Timer disable config 0x%x"
leon_timer_enable(int id, uint32_t count) "timer:%d set count 0x%x and run"
leon_timer_hit(int id) "timer:%d HIT"
leon_unknown_register(const char *op, uint64_t val) "%s unknown register 0x%"PRIx64""
leon_readl(uint64_t addr, uint32_t val) "addr:0x%"PRIx64" val:0x%x"
leon_writel(uint64_t addr, uint32_t val) "addr:0x%"PRIx64" val:0x%x"
